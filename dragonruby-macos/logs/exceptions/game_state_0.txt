# * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
# An exception occurred soon after ~$gtk.reset~ was invoked.
# 
# Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.
# 
# You may have attempted to interact with properties on ~args.state~ that no longer have a value.
# 
# There are a few ways to fix exceptions that fall into this category:
# 
# 1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
# with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
# reset on the next frame before invoking your ~tick~ method).
# 2. Anywhere you are using ~$gtk.reset~, immediately set default values for
# properties on ~args.state~ that are needed to complete the execution
# of the rest of your ~tick~ function successfully.
# 3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
# and ensures it has a consistent/valid state.
# 
# Take a look at the following sample apps for insights on how to do this:
# - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
# - =./samples/99_genre_platformer/shadows/app/main.rb=
# 
# ** NOTE:
# The options above are ordered by quickest to implement (but probably not
# bulletproof), to more work to implement (but a better design long term).
# 
# * EXCEPTION THROWN:
# * ERROR:
# Undefined method args for main. Did you forget to pass in args as a parameter?
# 
# 
# ** Backtrace:
# *** app/main.rb:13:in display_hud
# *** app/main.rb:3:in tick
# 
# * Backtrace ~$gtk.reset~ last invocation:
# 

Game State:
{:state=>{:entity_id=>3, :tick_count=>0, :__thrash_count__=>{}, :time=>0, :cubes=>[]}, :temp_state=>{}, :inputs=>{:controller_one=>{:key_down=>{}, :key_held=>{}, :key_up=>{}}, :controller_two=>{:key_down=>{}, :key_held=>{}, :key_up=>{}}, :controller_three=>{:key_down=>{}, :key_held=>{}, :key_up=>{}}, :controller_four=>{:key_down=>{}, :key_held=>{}, :key_up=>{}}, :keyboard=>{:key_up=>{:truthy_keys=>[]}, :key_held=>{:truthy_keys=>[]}, :key_down=>{:truthy_keys=>[]}, :has_focus=>true}, :mouse=>{:x=>0, :y=>0, :moved=>nil, :moved_at=>nil, :has_focus=>false}, :text=>[]}, :passes=>[], :outputs=>{:solids=>[], :sprites=>[], :lines=>[], :labels=>[], :sounds=>[], :borders=>[], :primitives=>[], :static_solids=>[], :static_borders=>[], :static_sprites=>[], :static_lines=>[], :static_labels=>[], :static_primitives=>[]}, :grid=>{:device_right=>1280, :hd_bottom=>0, :hd_w=>1280, :runtime=>{:argv=>"./dragonruby rubyden", :platform=>"Mac OS X", :required_files=>["app/main.rb"], :reload_list_history=>{"app/main.rb"=>{:current=>{:path=>"app/main.rb", :global_at=>-1, :event=>:reload_completed}, :history=>[{:path=>"app/main.rb", :global_at=>-1, :event=>:reload_queued}, {:path=>"app/main.rb", :global_at=>-1, :event=>:processing}, {:path=>"app/main.rb", :global_at=>-1, :event=>:reload_completed}]}}}, :device_top=>720, :device_bottom=>0.0, :hd_right=>1280, :hd_top=>720, :device_width=>1280, :name=>:bottom_left, :native_width=>1280, :hd_left=>0, :device_height=>720, :native_scale=>1.0, :native_height=>720, :top=>720, :center_x=>640.0, :native_h=>720, :bottom=>0.0, :window_w=>1280, :center_y=>360.0, :left_margin=>0.0, :window_h=>720, :left=>0.0, :bottom_margin=>0.0, :right=>1280, :origin_y=>720, :device_left=>0.0, :hd_offset_x=>0, :origin_x=>0.0, :hd_h=>720, :center=>[[:x, 640.0], [:y, 360.0]], :native_w=>1280, :ffi_draw=>"", :native_scale_enum=>100, :rect=>[[:x, 0.0], [:y, 0.0], [:w, 1280], [:h, 720]], :hd_offset_y=>0}}